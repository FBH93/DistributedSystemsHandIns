syntax = "proto3";
package grpc;

option go_package = "github.com/FBH93/DistributedSystemsHandIns/HandIn5/grpc";

service Auction {
  rpc Bid (bid_request) returns (bid_reply) {};
  rpc Result (result_request) returns (result_reply) {};
}

service Nodes {
  rpc UpdateNodes (stream update) returns (stream update) {};
  // TODO: Implement Election
  // rpc ElectLeader () returns () {}
}

message update {
  int32 nodeId = 1;
  int32 LeaderId = 2;
  bool auctionLive = 3;
  int32 version = 4;
  int32 highestBid = 5;
  repeated int32 clients = 6;
  repeated int32 nodes = 7;
  int32 crashes = 8;
}

enum Outcome {
  SUCCESS = 0;
  FAIL = 1;
  EXCEPTION = 2;
}

message bid_request {
  int32 amount = 1;
  int32 clientId = 2;
}

message result_request {

}

message bid_reply {
  Outcome outcome = 1;
  optional string comment = 2;
}

message result_reply {
  int32 highest_bid = 1;
  string comment = 2;
}